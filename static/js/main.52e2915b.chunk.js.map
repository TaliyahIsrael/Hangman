{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","components/Notification.js","helpers/helpers.js","components/Popup.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","Notification","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e2915b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Hangman</h1>\r\n      <p>Find the hidden word - Enter a letter:</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Figure = ({wrongLetters}) => {\r\n  const errors = wrongLetters.length; \r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/*<!-- Rod -->*/}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n     {/*<!-- Head -->*/}\r\n     {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n      {/*<!-- Body -->*/}\r\n      {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\r\n      {/*<!-- Arms -->*/}\r\n      {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\r\n      {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\r\n      {/*<!-- Legs -->*/}\r\n      {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\r\n      {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n ","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n      {wrongLetters.length > 0 && <p>Wrong</p>}\r\n      {wrongLetters\r\n        .map((letter, i) => <span key={i}>{letter}</span>)\r\n        .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null )}  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react'\r\n\r\nfunction Word({selectedWord, correctLetters }) {\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map(  (letter, i) => {\r\n        return (\r\n          <span className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word\r\n\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Notification\r\n ","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000); \r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win';\r\n\r\n  //check for wins \r\n  word.split('').forEach(letter => {\r\n    if(!correct.includes(letter)) {\r\n      status = '';\r\n    }  \r\n  });\r\n//check or lose \r\nif(wrong.length === 6) status = 'lose';\r\n\r\nreturn status;\r\n}","import React, { useEffect } from 'react'\r\nimport {checkWin} from '../helpers/helpers';\r\n\r\nconst Popup = ({ correctLetters, wrongLetters, selectedWord, setPlayable, playAgain }) => {\r\n  let finalMessage = '';\r\n  let finalMessageRevealWord = '';\r\n  let playable = true;\r\n\r\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win') {\r\n    finalMessage = 'Congratulations! You Won!'; \r\n    playable = false;\r\n  } else if ( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose') {\r\n    finalMessage = 'You Lost, Try again!'; \r\n    finalMessageRevealWord = ` ... the word was: ${selectedWord}`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => setPlayable(playable));\r\n  \r\n  return (\r\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {} }>\r\n      <div className=\"popup\">\r\n        <h2> {finalMessage}</h2>\r\n        <h3> {finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Popup\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css'; \n\nimport Header from './components/Header';\nimport Figure from './components/Figure';\nimport WrongLetters from './components/WrongLetters';\nimport Word from './components/Word';\nimport Notification from './components/Notification';\nimport Popup from './components/Popup';\nimport {showNotification as show} from './helpers/helpers'\n\n\n\n\nconst words = ['application', 'programming', 'interface', 'wizard'];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n  \n  useEffect(() => {\n    const handleKeydown = event => {\n      const {key, keyCode} = event;\n        if (playable && keyCode >= 65 && keyCode <= 90) {\n          const letter = key.toLowerCase();\n    \n          if (selectedWord.includes(letter)) {\n            if (!correctLetters.includes(letter)) {\n              setCorrectLetters(currentLetters => [...currentLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          } else {\n            if (!wrongLetters.includes(letter)) {\n              setWrongLetters(wrongLetters => [...wrongLetters, letter]);\n            } else {\n              show(setShowNotification);\n            }\n          }\n        }\n      }\n      window.addEventListener('keydown', handleKeydown) ;\n      return () => window.removeEventListener('keydown', handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n  \nfunction playAgain() {\n  setPlayable(true);\n\n  //Empty Arrays\n  setCorrectLetters([]);\n  setWrongLetters([]);\n\n  const random = Math.floor(Math.random() * words.length);\n  selectedWord = words[random];\n\n}\n\n  return ( \n    <>\n     <Header /> \n     <div className=\"game container\">\n       <Figure wrongLetters={wrongLetters} />\n       <WrongLetters wrongLetters={wrongLetters} />\n       <Word selectedWord={selectedWord} correctLetters={correctLetters}/>\n     </div>\n     <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\n     <Notification showNotification={showNotification} />\n     \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}